# VIBECODER-SECURE MCP - Pull Request Validation
name: 🔍 PR Validation

'on':
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  vibecoder-validation:
    name: 🎯 Vibecoder PR Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout PR
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 Validate integrity
      run: |
        python main.py validate . --fast
        
    - name: 🎯 Check Vibecoder alignment
      run: |
        # Extract PR title and check Vibecoder alignment
        PR_TITLE="${{ github.event.pull_request.title }}"
        python -c "
        from src.agents.vibecoder_roadmap import check_vibecoder_alignment
        import sys
        result = check_vibecoder_alignment('.', '$PR_TITLE')
        print(f'🎯 Vibecoder Alignment: {result[\"is_vibecoder_aligned\"]}')
        print(f'📊 Vibecoder Score: {result[\"vibecoder_score\"]}')
        print(f'🔄 Generic Score: {result[\"generic_score\"]}')
        print(f'💡 Recommendation: {result[\"recommendation\"]}')
        if not result['is_vibecoder_aligned']:
            print('⚠️  This PR may not align with Vibecoder principles')
            print('💡 Consider focusing on Vibecoder-specific workflows')
            sys.exit(1)
        "
        
    - name: 📊 Generate validation report
      run: |
        echo "# 🎯 Vibecoder Validation Report" > validation-report.md
        echo "" >> validation-report.md
        echo "## 📋 PR Details" >> validation-report.md
        echo "- **Title:** ${{ github.event.pull_request.title }}" >> validation-report.md
        echo "- **Author:** ${{ github.event.pull_request.user.login }}" >> validation-report.md
        echo "- **Branch:** ${{ github.head_ref }}" >> validation-report.md
        echo "" >> validation-report.md
        
        echo "## 🔍 Validation Results" >> validation-report.md
        python main.py validate . > validation-output.txt 2>&1 || true
        echo '```' >> validation-report.md
        cat validation-output.txt >> validation-report.md
        echo '```' >> validation-report.md
        echo "" >> validation-report.md
        
        echo "## 📊 Current Roadmap Status" >> validation-report.md
        echo '```' >> validation-report.md
        python -c "from src.agents.visual_roadmap import generate_visual_roadmap; print(generate_visual_roadmap('.', 'progress'))" >> validation-report.md
        echo '```' >> validation-report.md
        
    - name: 📤 Upload validation report
      uses: actions/upload-artifact@v3
      with:
        name: vibecoder-validation-report
        path: validation-report.md
        
    - name: 💬 Comment on PR
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('validation-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🎯 **Vibecoder Validation Complete**\n\n${report}`
          });

  docker-test:
    name: 🐳 Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout PR
      uses: actions/checkout@v4
      
    - name: 🐳 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🔨 Test Docker build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: vibecoder-test:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: 🧪 Test container health
      run: |
        docker run -d --name vibecoder-test -p 8000:8000 vibecoder-test:latest
        sleep 30
        curl -f http://localhost:8000/health || exit 1
        docker logs vibecoder-test
        docker stop vibecoder-test